{"version":3,"sources":["main.js"],"names":["tempX","localStorage","getItem","x","JSON","parse","hashMap","imgUrl","logoType","url","$siteList","$","$lastLi","find","removeHttp","tempUrl","console","log","result","capsLetter","replace","toUpperCase","render","remove","forEach","node","index","node2","li","site","on","window","open","e","stopPropagation","splice","attr","insertBefore","indexOf","document","key","i","length","prompt","push","onbeforeunload","string","stringify","setItem"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..\\src","sourcesContent":["const tempX = localStorage.getItem('x')\r\nconst x = JSON.parse(tempX)\r\nconst hashMap = x || [{ imgUrl: \"../img/figma.png\", logoType: \"image\", url: \"https://www.figma.com\" },\r\n{ imgUrl: \"../img/iconfont.png\", logoType: \"image\", url: \"https://www.iconfont.cn\" },\r\n{ imgUrl: \"../img/bootcdn.png\", logoType: \"image\", url: \"https://www.bootcdn.cn\" },\r\n]\r\nconst $siteList = $('.siteList')\r\nconst $lastLi = $siteList.find('li.last')\r\n\r\nconst removeHttp = (url) => {\r\n    let tempUrl = url\r\n    console.log(url)\r\n    let result = { url: \"\", capsLetter: \"\" }\r\n    // if (tempUrl.indexOf('http://') === -1 && tempUrl.indexOf('https://') === -1) { //没有http的情况\r\n    //     (tempUrl.indexOf('www.') === -1) ? result = { capsLetter: tempUrl[0].toUpperCase(), url: url } : result = { capsLetter: tempUrl[4].toUpperCase(), url: tempUrl.substring(4) }\r\n    //     return result\r\n    // } else {\r\n    //     (tempUrl.indexOf('www.') === -1) ? result = { capsLetter: tempUrl[tempUrl.indexOf('/') + 2].toUpperCase(), url: url.substring(tempUrl.indexOf('/') + 2) } : result = { capsLetter: tempUrl[tempUrl.indexOf('.') + 1].toUpperCase(), url: url.substring(tempUrl.indexOf('.') + 1) }\r\n    //     return result\r\n    // }\r\n    result.url = tempUrl.replace(\"https://\", '').replace(\"http://\", '').replace(\"www.\", '').replace(/\\/.*/, '')\r\n    result.capsLetter = result.url[0].toUpperCase()\r\n    return result\r\n}\r\n\r\n\r\n\r\nconst render = () => {\r\n    $siteList.find('li:not(.last)').remove()\r\n    hashMap.forEach((node, index) => {\r\n        if (node.logoType === 'image') {\r\n            let node2 = removeHttp(node.url)\r\n            let li = $(`<li class=\"liMargin\">\r\n                <div class=\"site\">\r\n                    <div class=\"logo\"><img src=\"\" alt=''></div>\r\n                    <div class=\"link\">${node2.url}</div>\r\n                    <div class=\"close\">\r\n                        <svg class=\"icon\">\r\n                            <use xlink:href=\"#icon-shanchu\"></use>\r\n                        </svg>\r\n                    </div>\r\n                </div>\r\n            </li>`)\r\n            let site = li.find('.site')\r\n            site.on('click', function () {\r\n                window.open(node.url)\r\n            })\r\n            site.on('click', '.close', (e) => {\r\n                e.stopPropagation()\r\n                hashMap.splice(index, 1)\r\n                render()\r\n                console.log(hashMap)\r\n            })\r\n            li.find(\"img\").attr(\"alt\", node2.capsLetter).attr(\"src\", node.imgUrl)\r\n            li.insertBefore($lastLi)\r\n        } else {\r\n            let node2 = removeHttp(node.url)\r\n            if (node.url.indexOf('http://') === -1 && node.url.indexOf('https://') === -1) {\r\n                let li = $(`<li class=\"liMargin\">\r\n                <div class=\"site\">\r\n                    <div class=\"logo\">${node2.capsLetter}</div>\r\n                    <div class=\"link\">${node2.url}</div>\r\n                    <div class=\"close\">\r\n                        <svg class=\"icon\">\r\n                            <use xlink:href=\"#icon-shanchu\"></use>\r\n                        </svg>\r\n                    </div>\r\n                </div>\r\n            </li>`)\r\n                node.url = \"http://\" + node.url\r\n                let site = li.find('.site')\r\n                site.on('click', function () {\r\n                    window.open(node.url)\r\n                })\r\n                site.on('click', '.close', (e) => {\r\n                    e.stopPropagation()\r\n                    hashMap.splice(index, 1)\r\n                    render()\r\n                    console.log(hashMap)\r\n                })\r\n                li.insertBefore($lastLi)\r\n            }\r\n            else {\r\n                let li = $(`<li class=\"liMargin\">\r\n                    <div class=\"site\">\r\n                        <div class=\"logo\">${node2.capsLetter}</div>\r\n                        <div class=\"link\">${node2.url}</div>\r\n                        <div class=\"close\">\r\n                            <svg class=\"icon\">\r\n                                <use xlink:href=\"#icon-shanchu\"></use>\r\n                            </svg>\r\n                        </div>\r\n                    </div>\r\n                </li>`)\r\n                let site = li.find('.site')\r\n                site.on('click', function () {\r\n                    window.open(node.url)\r\n                })\r\n                site.on('click', '.close', (e) => {\r\n                    e.stopPropagation()\r\n                    hashMap.splice(index, 1)\r\n                    render()\r\n                    console.log(hashMap)\r\n                })\r\n                li.insertBefore($lastLi)\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nrender()\r\n$(document).on('keypress', (e) => {\r\n    const { key } = e\r\n    for (let i = 0; i < hashMap.length; i++) {\r\n        if (hashMap[i].url.replace(\"http://\", '').replace(\"https://\", '').replace(\"www.\", '')[0] === key) {\r\n            window.open(hashMap[i].url)\r\n        }\r\n    }\r\n})\r\n\r\n$('.addSite')\r\n    .on('click', () => {\r\n        let url = window.prompt('输入要添加的网址：')\r\n        hashMap.push({ logoType: \"text\", url: url })\r\n        render()\r\n        /*if (url1.indexOf('http://') != 0 && url1.indexOf('https://') != 0) { //判断用户加没加http前缀\r\n            url2 = 'http://' + url1\r\n            console.log('happy birthday')\r\n            let tempLetter = url1[0]\r\n            const capsLetter = tempLetter.toUpperCase()\r\n            const $li = $(`<li>\r\n                <a href=\"${url2}\">\r\n                    <div class=\"site\">\r\n                        <div class=\"logo\">${capsLetter}</div>\r\n                        <div class=\"link\">${url1}</div>\r\n                    </div>\r\n                </a>\r\n            </li>\r\n            `).insertBefore($lastLi)\r\n        } else {\r\n            let index = url1.indexOf('/') + 2\r\n            let tempLetter = url1[index]\r\n            console.log(tempLetter)\r\n            const capsLetter = tempLetter.toUpperCase()\r\n            const $li = $(`<li>\r\n                <a href=\"${url1}\">\r\n                    <div class=\"site\">\r\n                        <div class=\"logo\">${capsLetter}</div>\r\n                        <div class=\"link\">${url1}</div>\r\n                    </div>\r\n                </a>\r\n            </li>\r\n            `).insertBefore($lastLi)\r\n        }*/\r\n    })\r\nwindow.onbeforeunload = function () {\r\n    let string = JSON.stringify(hashMap)\r\n    localStorage.setItem('x', string)\r\n}"]}