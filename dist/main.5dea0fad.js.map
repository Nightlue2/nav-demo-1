{"version":3,"sources":["main.js"],"names":["historyMap","JSON","parse","localStorage","getItem","hashMap","imgUrl","logoType","url","$siteList","$","$lastLi","find","removeHttp","tempUrl","result","capsLetter","replace","toUpperCase","render","remove","forEach","node","index","node2","li","site","on","window","open","e","stopPropagation","splice","attr","insertBefore","indexOf","console","log","document","key","i","length","prompt","alert","push","onbeforeunload","setItem","stringify"],"mappings":"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","file":"main.5dea0fad.js","sourceRoot":"..\\src","sourcesContent":["const historyMap = JSON.parse(localStorage.getItem('historyMap'))\nconst hashMap = historyMap || [{ imgUrl: \"https://i.loli.net/2020/10/19/39JO16gPvhSEBZF.png\", logoType: \"image\", url: \"https://www.figma.com\" },\n{ imgUrl: \"https://i.loli.net/2020/10/19/6sONMzgcVPbQleo.png\", logoType: \"image\", url: \"https://www.iconfont.cn\" },\n{ imgUrl: \"https://i.loli.net/2020/10/19/fA87jRZbP92yhYm.png\", logoType: \"image\", url: \"https://www.bootcdn.cn\" },\n{ imgUrl: \"https://i.loli.net/2020/10/19/WEQGv8RznqBHUhC.png\", logoType: \"image\", url: \"https://www.zhihu.com\" },\n{ imgUrl: \"https://i.loli.net/2020/10/19/bZc5wN9xDAROQKH.png\", logoType: \"image\", url: \"https://github.com\" },\n]\nconst $siteList = $('.siteList')\nconst $lastLi = $siteList.find('li.last')\n\nconst removeHttp = (url) => {\n    if(!url) return;\n    let tempUrl = url\n    let result = { url: \"\", capsLetter: \"\" }\n    result.url = tempUrl.replace(\"https://\", '').replace(\"http://\", '').replace(\"www.\", '').replace(/\\/.*/, '')\n    result.capsLetter = result.url[0].toUpperCase()\n    return result\n}\n\nconst render = () => {\n    $siteList.find('li:not(.last)').remove()\n    hashMap.forEach((node, index) => {\n        if (node.logoType === 'image') {\n            let node2 = removeHttp(node.url)\n            let li = $(`<li class=\"liMargin hvr-glow\">\n                <div class=\"site\">\n                    <div class=\"logo\"><img src=\"\" alt=''></div>\n                    <div class=\"link\">${node2.url}</div>\n                    <div class=\"close\">\n                        <svg class=\"icon\">\n                            <use xlink:href=\"#icon-shanchu\"></use>\n                        </svg>\n                    </div>\n                </div>\n            </li>`)\n            let site = li.find('.site')\n            site.on('click', function () {\n                window.open(node.url)\n            })\n            site.on('click', '.close', (e) => {\n                e.stopPropagation()\n                hashMap.splice(index, 1)\n                render()\n            })\n            li.find(\"img\").attr(\"alt\", node2.capsLetter).attr(\"src\", node.imgUrl)\n            li.insertBefore($lastLi)\n        } else {\n            let node2 = removeHttp(node.url)\n            if (node.url.indexOf('http://') === -1 && node.url.indexOf('https://') === -1) {\n                let li = $(`<li class=\"liMargin  hvr-glow\">\n                <div class=\"site\">\n                    <div class=\"logo\">${node2.capsLetter}</div>\n                    <div class=\"link\">${node2.url}</div>\n                    <div class=\"close\">\n                        <svg class=\"icon\">\n                            <use xlink:href=\"#icon-shanchu\"></use>\n                        </svg>\n                    </div>\n                </div>\n            </li>`)\n                node.url = \"http://\" + node.url\n                let site = li.find('.site')\n                site.on('click', function () {\n                    window.open(node.url)\n                })\n                site.on('click', '.close', (e) => {\n                    e.stopPropagation()\n                    hashMap.splice(index, 1)\n                    render()\n                    console.log(hashMap)\n                })\n                li.insertBefore($lastLi)\n            }\n            else {\n                let li = $(`<li class=\"liMargin\">\n                    <div class=\"site\">\n                        <div class=\"logo\">${node2.capsLetter}</div>\n                        <div class=\"link\">${node2.url}</div>\n                        <div class=\"close\">\n                            <svg class=\"icon\">\n                                <use xlink:href=\"#icon-shanchu\"></use>\n                            </svg>\n                        </div>\n                    </div>\n                </li>`)\n                let site = li.find('.site')\n                site.on('click', function () {\n                    window.open(node.url)\n                })\n                site.on('click', '.close', (e) => {\n                    e.stopPropagation()\n                    hashMap.splice(index, 1)\n                    render()\n                    console.log(hashMap)\n                })\n                li.insertBefore($lastLi)\n            }\n        }\n    })\n}\n\nrender()\n$(document).on('keypress', (e) => {\n    const { key } = e\n    for (let i = 0; i < hashMap.length; i++) {\n        if (hashMap[i].url.replace(\"http://\", '').replace(\"https://\", '').replace(\"www.\", '')[0] === key) {\n            window.open(hashMap[i].url)\n        }\n    }\n})\n\n$('.addSite')\n    .on('click', () => {\n        let url = window.prompt('输入要添加的网址：')\n        if(url === '') return window.alert('网址不能为空！');\n        if(!url) return;\n        hashMap.push({ logoType: \"text\", url: url })\n        render()\n        /*if (url1.indexOf('http://') != 0 && url1.indexOf('https://') != 0) { //判断用户加没加http前缀\n            url2 = 'http://' + url1\n            console.log('happy birthday')\n            let tempLetter = url1[0]\n            const capsLetter = tempLetter.toUpperCase()\n            const $li = $(`<li>\n                <a href=\"${url2}\">\n                    <div class=\"site\">\n                        <div class=\"logo\">${capsLetter}</div>\n                        <div class=\"link\">${url1}</div>\n                    </div>\n                </a>\n            </li>\n            `).insertBefore($lastLi)\n        } else {\n            let index = url1.indexOf('/') + 2\n            let tempLetter = url1[index]\n            console.log(tempLetter)\n            const capsLetter = tempLetter.toUpperCase()\n            const $li = $(`<li>\n                <a href=\"${url1}\">\n                    <div class=\"site\">\n                        <div class=\"logo\">${capsLetter}</div>\n                        <div class=\"link\">${url1}</div>\n                    </div>\n                </a>\n            </li>\n            `).insertBefore($lastLi)\n        }*/\n    })\nwindow.onbeforeunload = ()=> {\n    localStorage.setItem('historyMap', JSON.stringify(historyMap))\n}"]}